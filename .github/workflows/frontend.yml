name: Deploy Frontend to S3

on:
  push:
    branches:
      - main
    paths:
      - "Frontend/**"
  workflow_dispatch: {}

jobs:
  deploy:
    name: Deploy Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "eu-west-1"

      - name: Get S3 bucket name
        id: get-bucket
        run: |
          BUCKET_NAME=$(terraform output -raw website_url | awk -F'/' '{print $3}')
          echo "::set-output name=bucket_name::$BUCKET_NAME"

      - name: Apply Public Bucket Policy
        run: |
          POLICY=$(aws s3api get-bucket-policy --bucket ${{ steps.get-bucket.outputs.bucket_name }} --query Policy --output text 2>/dev/null || echo "")
          if [ -z "$POLICY" ]; then
            cat <<EOF > /tmp/bucket-policy.json
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "PublicReadGetObject",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": "s3:GetObject",
                  "Resource": "arn:aws:s3:::${{ steps.get-bucket.outputs.bucket_name }}/*"
                }
              ]
            }
            EOF
            aws s3api put-bucket-policy --bucket ${{ steps.get-bucket.outputs.bucket_name }} --policy file:///tmp/bucket-policy.json
          else
            echo "Bucket policy already exists."
          fi

      - name: Upload to S3
        run: |
          aws s3 sync Frontend s3://${{ steps.get-bucket.outputs.bucket_name }} \
            --delete \
            --acl public-read \
            --cache-control "max-age=86400"
